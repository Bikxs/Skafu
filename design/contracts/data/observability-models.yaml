title: Observability Domain Data Models
description: Data models and validation schemas for the Observability domain
version: 1.0.0

# JSON Schema definitions for Observability domain entities

schemas:
  # Core Metric Entity
  Metric:
    type: object
    required:
      - id
      - name
      - namespace
      - value
      - unit
      - timestamp
      - source
    properties:
      id:
        type: string
        format: uuid
        description: Unique identifier for the metric
        example: "123e4567-e89b-12d3-a456-426614174000"
      name:
        type: string
        minLength: 1
        maxLength: 255
        pattern: "^[a-zA-Z][a-zA-Z0-9._-]*$"
        description: Metric name
        example: "request_duration"
      namespace:
        type: string
        minLength: 1
        maxLength: 255
        pattern: "^[a-zA-Z][a-zA-Z0-9._/-]*$"
        description: Metric namespace
        example: "skafu/api"
      value:
        type: number
        format: double
        description: Metric value
        example: 125.5
      unit:
        $ref: "#/schemas/MetricUnit"
      dimensions:
        type: object
        additionalProperties:
          type: string
          maxLength: 255
        maxProperties: 30
        description: Metric dimensions
        example:
          service: "project-management"
          environment: "production"
          region: "us-east-1"
          method: "GET"
          endpoint: "/projects"
      metadata:
        type: object
        additionalProperties:
          type: string
          maxLength: 1000
        maxProperties: 10
        description: Additional metadata
        example:
          requestId: "req-123456"
          userId: "user-789"
          traceId: "trace-abc123"
      timestamp:
        type: string
        format: date-time
        description: Metric timestamp
        example: "2025-01-18T10:30:00.000Z"
      source:
        type: string
        minLength: 1
        maxLength: 255
        description: Metric source
        example: "lambda-function"
      tags:
        type: array
        items:
          type: string
          minLength: 1
          maxLength: 50
          pattern: "^[a-zA-Z0-9._-]+$"
        maxItems: 20
        uniqueItems: true
        description: Metric tags
        example: ["api", "performance", "latency"]
      retention:
        type: integer
        minimum: 1
        maximum: 2555
        description: Retention period in days
        example: 90
      statistic:
        type: string
        enum: [Average, Sum, Maximum, Minimum, SampleCount]
        description: Metric statistic type
        example: "Average"
      resolution:
        type: integer
        enum: [60, 300, 900, 3600]
        description: Metric resolution in seconds
        example: 300
    additionalProperties: false

  MetricUnit:
    type: string
    enum:
      - Seconds
      - Microseconds
      - Milliseconds
      - Bytes
      - Kilobytes
      - Megabytes
      - Gigabytes
      - Terabytes
      - Bits
      - Kilobits
      - Megabits
      - Gigabits
      - Terabits
      - Percent
      - Count
      - Bytes/Second
      - Kilobytes/Second
      - Megabytes/Second
      - Gigabytes/Second
      - Terabytes/Second
      - Bits/Second
      - Kilobits/Second
      - Megabits/Second
      - Gigabits/Second
      - Terabits/Second
      - Count/Second
      - None
    description: Metric unit
    example: "Milliseconds"

  # Log Entry Entity
  LogEntry:
    type: object
    required:
      - id
      - timestamp
      - level
      - message
      - source
    properties:
      id:
        type: string
        format: uuid
        description: Unique identifier for the log entry
        example: "456e7890-e12b-34d5-a789-426614174001"
      timestamp:
        type: string
        format: date-time
        description: Log entry timestamp
        example: "2025-01-18T10:30:00.000Z"
      level:
        $ref: "#/schemas/LogLevel"
      message:
        type: string
        minLength: 1
        maxLength: 10000
        description: Log message
        example: "Successfully processed request"
      source:
        type: string
        minLength: 1
        maxLength: 255
        description: Log source
        example: "project-management-api"
      logger:
        type: string
        maxLength: 255
        description: Logger name
        example: "com.skafu.project.ProjectController"
      thread:
        type: string
        maxLength: 100
        description: Thread name
        example: "http-nio-8080-exec-1"
      requestId:
        type: string
        maxLength: 100
        description: Request identifier
        example: "req-123456789"
      traceId:
        type: string
        maxLength: 100
        description: Trace identifier
        example: "trace-abc123def456"
      spanId:
        type: string
        maxLength: 100
        description: Span identifier
        example: "span-789012345"
      userId:
        type: string
        format: uuid
        description: User identifier
        example: "user-123e4567-e89b-12d3-a456-426614174000"
      sessionId:
        type: string
        maxLength: 100
        description: Session identifier
        example: "sess-987654321"
      environment:
        type: string
        enum: [development, staging, production]
        description: Environment
        example: "production"
      service:
        type: string
        maxLength: 255
        description: Service name
        example: "project-management"
      version:
        type: string
        maxLength: 50
        description: Service version
        example: "1.2.3"
      region:
        type: string
        maxLength: 50
        description: AWS region
        example: "us-east-1"
      availabilityZone:
        type: string
        maxLength: 50
        description: Availability zone
        example: "us-east-1a"
      instanceId:
        type: string
        maxLength: 100
        description: Instance identifier
        example: "i-0123456789abcdef0"
      functionName:
        type: string
        maxLength: 100
        description: Lambda function name
        example: "project-management-api"
      functionVersion:
        type: string
        maxLength: 20
        description: Lambda function version
        example: "$LATEST"
      exception:
        $ref: "#/schemas/ExceptionInfo"
      context:
        type: object
        additionalProperties:
          type: string
          maxLength: 1000
        maxProperties: 20
        description: Additional context
        example:
          endpoint: "/projects"
          method: "GET"
          statusCode: "200"
          duration: "125ms"
      tags:
        type: array
        items:
          type: string
          minLength: 1
          maxLength: 50
          pattern: "^[a-zA-Z0-9._-]+$"
        maxItems: 20
        uniqueItems: true
        description: Log entry tags
        example: ["api", "request", "success"]
      fields:
        type: object
        additionalProperties: true
        description: Structured log fields
        example:
          statusCode: 200
          duration: 125.5
          requestSize: 1024
          responseSize: 2048
    additionalProperties: false

  LogLevel:
    type: string
    enum:
      - TRACE
      - DEBUG
      - INFO
      - WARN
      - ERROR
      - FATAL
    description: Log level
    example: "INFO"

  ExceptionInfo:
    type: object
    properties:
      type:
        type: string
        maxLength: 255
        description: Exception type
        example: "java.lang.RuntimeException"
      message:
        type: string
        maxLength: 1000
        description: Exception message
        example: "Connection timeout"
      stackTrace:
        type: string
        maxLength: 10000
        description: Stack trace
        example: "java.lang.RuntimeException: Connection timeout\n\tat com.example.Service.connect(Service.java:45)"
      cause:
        type: string
        maxLength: 1000
        description: Root cause
        example: "java.net.SocketTimeoutException: Read timed out"
      file:
        type: string
        maxLength: 255
        description: Source file
        example: "ProjectService.java"
      line:
        type: integer
        minimum: 1
        description: Line number
        example: 125
      method:
        type: string
        maxLength: 255
        description: Method name
        example: "createProject"
    additionalProperties: false

  # Trace Entity
  Trace:
    type: object
    required:
      - id
      - timestamp
      - duration
      - service
      - operation
      - spans
    properties:
      id:
        type: string
        maxLength: 100
        description: Trace identifier
        example: "trace-abc123def456"
      timestamp:
        type: string
        format: date-time
        description: Trace start timestamp
        example: "2025-01-18T10:30:00.000Z"
      duration:
        type: number
        format: double
        minimum: 0
        description: Trace duration in milliseconds
        example: 245.5
      service:
        type: string
        maxLength: 255
        description: Root service name
        example: "project-management"
      operation:
        type: string
        maxLength: 255
        description: Root operation name
        example: "POST /projects"
      spans:
        type: array
        items:
          $ref: "#/schemas/Span"
        description: Trace spans
      tags:
        type: object
        additionalProperties:
          type: string
          maxLength: 255
        maxProperties: 20
        description: Trace tags
        example:
          http.method: "POST"
          http.url: "/projects"
          http.status_code: "201"
          user.id: "user-123"
      process:
        $ref: "#/schemas/ProcessInfo"
      errors:
        type: integer
        minimum: 0
        description: Number of errors in trace
        example: 0
      warnings:
        type: integer
        minimum: 0
        description: Number of warnings in trace
        example: 1
    additionalProperties: false

  Span:
    type: object
    required:
      - id
      - traceId
      - operationName
      - startTime
      - duration
      - tags
    properties:
      id:
        type: string
        maxLength: 100
        description: Span identifier
        example: "span-789012345"
      traceId:
        type: string
        maxLength: 100
        description: Trace identifier
        example: "trace-abc123def456"
      parentSpanId:
        type: string
        maxLength: 100
        description: Parent span identifier
        example: "span-456789012"
      operationName:
        type: string
        maxLength: 255
        description: Operation name
        example: "database.query"
      startTime:
        type: string
        format: date-time
        description: Span start timestamp
        example: "2025-01-18T10:30:00.100Z"
      duration:
        type: number
        format: double
        minimum: 0
        description: Span duration in milliseconds
        example: 25.5
      tags:
        type: object
        additionalProperties:
          type: string
          maxLength: 255
        maxProperties: 20
        description: Span tags
        example:
          component: "database"
          db.type: "postgresql"
          db.statement: "SELECT * FROM projects WHERE id = ?"
          db.instance: "skafu-db"
      logs:
        type: array
        items:
          $ref: "#/schemas/SpanLog"
        description: Span logs
      process:
        $ref: "#/schemas/ProcessInfo"
      references:
        type: array
        items:
          $ref: "#/schemas/SpanReference"
        description: Span references
      status:
        type: string
        enum: [OK, ERROR, TIMEOUT]
        description: Span status
        example: "OK"
      statusMessage:
        type: string
        maxLength: 1000
        description: Status message
        example: "Query executed successfully"
    additionalProperties: false

  SpanLog:
    type: object
    required:
      - timestamp
      - fields
    properties:
      timestamp:
        type: string
        format: date-time
        description: Log timestamp
        example: "2025-01-18T10:30:00.150Z"
      fields:
        type: object
        additionalProperties:
          type: string
          maxLength: 1000
        maxProperties: 10
        description: Log fields
        example:
          event: "query_start"
          message: "Executing database query"
          sql: "SELECT * FROM projects WHERE id = ?"
    additionalProperties: false

  SpanReference:
    type: object
    required:
      - type
      - traceId
      - spanId
    properties:
      type:
        type: string
        enum: [CHILD_OF, FOLLOWS_FROM]
        description: Reference type
        example: "CHILD_OF"
      traceId:
        type: string
        maxLength: 100
        description: Referenced trace ID
        example: "trace-abc123def456"
      spanId:
        type: string
        maxLength: 100
        description: Referenced span ID
        example: "span-456789012"
    additionalProperties: false

  ProcessInfo:
    type: object
    properties:
      serviceName:
        type: string
        maxLength: 255
        description: Service name
        example: "project-management"
      tags:
        type: object
        additionalProperties:
          type: string
          maxLength: 255
        maxProperties: 20
        description: Process tags
        example:
          hostname: "ip-10-0-1-100"
          ip: "10.0.1.100"
          version: "1.2.3"
          environment: "production"
    additionalProperties: false

  # Health Check Entity
  HealthCheck:
    type: object
    required:
      - id
      - name
      - status
      - timestamp
      - service
    properties:
      id:
        type: string
        format: uuid
        description: Health check identifier
        example: "789e1234-e56f-78d9-a012-426614174002"
      name:
        type: string
        minLength: 1
        maxLength: 255
        description: Health check name
        example: "database_connection"
      status:
        $ref: "#/schemas/HealthStatus"
      timestamp:
        type: string
        format: date-time
        description: Health check timestamp
        example: "2025-01-18T10:30:00.000Z"
      service:
        type: string
        maxLength: 255
        description: Service name
        example: "project-management"
      component:
        type: string
        maxLength: 255
        description: Component name
        example: "database"
      version:
        type: string
        maxLength: 50
        description: Service version
        example: "1.2.3"
      environment:
        type: string
        enum: [development, staging, production]
        description: Environment
        example: "production"
      region:
        type: string
        maxLength: 50
        description: AWS region
        example: "us-east-1"
      duration:
        type: number
        format: double
        minimum: 0
        description: Health check duration in milliseconds
        example: 15.5
      message:
        type: string
        maxLength: 1000
        description: Health check message
        example: "Database connection is healthy"
      details:
        type: object
        additionalProperties:
          type: string
          maxLength: 1000
        maxProperties: 10
        description: Health check details
        example:
          connectionPool: "8/10 connections active"
          responseTime: "5ms"
          lastQuery: "2025-01-18T10:29:55.000Z"
      tags:
        type: array
        items:
          type: string
          minLength: 1
          maxLength: 50
          pattern: "^[a-zA-Z0-9._-]+$"
        maxItems: 20
        uniqueItems: true
        description: Health check tags
        example: ["database", "postgresql", "critical"]
      criticality:
        type: string
        enum: [low, medium, high, critical]
        description: Health check criticality
        example: "high"
      timeout:
        type: integer
        minimum: 1
        maximum: 300
        description: Health check timeout in seconds
        example: 30
      interval:
        type: integer
        minimum: 1
        maximum: 3600
        description: Health check interval in seconds
        example: 60
      retries:
        type: integer
        minimum: 0
        maximum: 10
        description: Number of retries
        example: 3
      consecutiveFailures:
        type: integer
        minimum: 0
        description: Consecutive failure count
        example: 0
      lastSuccess:
        type: string
        format: date-time
        description: Last successful check timestamp
        example: "2025-01-18T10:29:00.000Z"
      lastFailure:
        type: string
        format: date-time
        description: Last failure timestamp
        example: "2025-01-18T09:15:00.000Z"
    additionalProperties: false

  HealthStatus:
    type: string
    enum:
      - healthy
      - unhealthy
      - degraded
      - unknown
    description: Health status
    example: "healthy"

  # Alert Entity
  Alert:
    type: object
    required:
      - id
      - name
      - severity
      - status
      - condition
      - timestamp
      - source
    properties:
      id:
        type: string
        format: uuid
        description: Alert identifier
        example: "012e3456-e78f-90a1-b234-567890123456"
      name:
        type: string
        minLength: 1
        maxLength: 255
        description: Alert name
        example: "High Error Rate"
      description:
        type: string
        maxLength: 1000
        description: Alert description
        example: "Error rate exceeded 5% threshold"
      severity:
        $ref: "#/schemas/AlertSeverity"
      status:
        $ref: "#/schemas/AlertStatus"
      condition:
        $ref: "#/schemas/AlertCondition"
      timestamp:
        type: string
        format: date-time
        description: Alert timestamp
        example: "2025-01-18T10:30:00.000Z"
      source:
        type: string
        maxLength: 255
        description: Alert source
        example: "cloudwatch"
      service:
        type: string
        maxLength: 255
        description: Service name
        example: "project-management"
      environment:
        type: string
        enum: [development, staging, production]
        description: Environment
        example: "production"
      region:
        type: string
        maxLength: 50
        description: AWS region
        example: "us-east-1"
      metric:
        type: string
        maxLength: 255
        description: Metric name
        example: "ErrorRate"
      currentValue:
        type: number
        format: double
        description: Current metric value
        example: 7.5
      threshold:
        type: number
        format: double
        description: Alert threshold
        example: 5.0
      duration:
        type: integer
        minimum: 0
        description: Alert duration in seconds
        example: 300
      evaluationPeriods:
        type: integer
        minimum: 1
        description: Number of evaluation periods
        example: 3
      datapointsToAlarm:
        type: integer
        minimum: 1
        description: Data points to alarm
        example: 2
      suppressionRules:
        type: array
        items:
          $ref: "#/schemas/SuppressionRule"
        description: Alert suppression rules
      notifications:
        type: array
        items:
          $ref: "#/schemas/NotificationConfig"
        description: Notification configurations
      tags:
        type: object
        additionalProperties:
          type: string
          maxLength: 255
        maxProperties: 20
        description: Alert tags
        example:
          team: "platform"
          runbook: "https://wiki.example.com/alerts/high-error-rate"
          priority: "high"
      resolvedAt:
        type: string
        format: date-time
        description: Alert resolution timestamp
        example: "2025-01-18T10:35:00.000Z"
      acknowledgedAt:
        type: string
        format: date-time
        description: Alert acknowledgment timestamp
        example: "2025-01-18T10:32:00.000Z"
      acknowledgedBy:
        type: string
        maxLength: 255
        description: User who acknowledged the alert
        example: "john.doe@example.com"
      resolutionNote:
        type: string
        maxLength: 1000
        description: Resolution note
        example: "Fixed database connection pool configuration"
      escalationLevel:
        type: integer
        minimum: 0
        maximum: 5
        description: Current escalation level
        example: 1
      lastEscalation:
        type: string
        format: date-time
        description: Last escalation timestamp
        example: "2025-01-18T10:31:00.000Z"
    additionalProperties: false

  AlertSeverity:
    type: string
    enum:
      - critical
      - high
      - medium
      - low
      - info
    description: Alert severity
    example: "high"

  AlertStatus:
    type: string
    enum:
      - firing
      - resolved
      - acknowledged
      - suppressed
    description: Alert status
    example: "firing"

  AlertCondition:
    type: object
    required:
      - metric
      - operator
      - threshold
      - evaluationPeriods
    properties:
      metric:
        type: string
        maxLength: 255
        description: Metric name
        example: "ErrorRate"
      operator:
        type: string
        enum: [">", ">=", "<", "<=", "==", "!="]
        description: Comparison operator
        example: ">"
      threshold:
        type: number
        format: double
        description: Alert threshold
        example: 5.0
      evaluationPeriods:
        type: integer
        minimum: 1
        description: Number of evaluation periods
        example: 3
      period:
        type: integer
        minimum: 60
        description: Evaluation period in seconds
        example: 300
      statistic:
        type: string
        enum: [Average, Sum, Maximum, Minimum, SampleCount]
        description: Metric statistic
        example: "Average"
      unit:
        $ref: "#/schemas/MetricUnit"
      dimensions:
        type: object
        additionalProperties:
          type: string
          maxLength: 255
        maxProperties: 10
        description: Metric dimensions
        example:
          service: "project-management"
          environment: "production"
    additionalProperties: false

  SuppressionRule:
    type: object
    required:
      - type
      - duration
    properties:
      type:
        type: string
        enum: [maintenance, deployment, testing, manual]
        description: Suppression type
        example: "maintenance"
      duration:
        type: integer
        minimum: 1
        description: Suppression duration in seconds
        example: 3600
      reason:
        type: string
        maxLength: 500
        description: Suppression reason
        example: "Scheduled maintenance window"
      startTime:
        type: string
        format: date-time
        description: Suppression start time
        example: "2025-01-18T10:30:00.000Z"
      endTime:
        type: string
        format: date-time
        description: Suppression end time
        example: "2025-01-18T11:30:00.000Z"
      createdBy:
        type: string
        maxLength: 255
        description: User who created the suppression
        example: "john.doe@example.com"
    additionalProperties: false

  NotificationConfig:
    type: object
    required:
      - type
      - target
      - enabled
    properties:
      type:
        type: string
        enum: [email, sms, slack, webhook, pagerduty, teams]
        description: Notification type
        example: "email"
      target:
        type: string
        maxLength: 255
        description: Notification target
        example: "team@example.com"
      enabled:
        type: boolean
        description: Whether notification is enabled
        example: true
      severity:
        type: array
        items:
          $ref: "#/schemas/AlertSeverity"
        description: Severity levels to notify
        example: ["critical", "high"]
      schedule:
        type: string
        maxLength: 255
        description: Notification schedule
        example: "24/7"
      template:
        type: string
        maxLength: 255
        description: Notification template
        example: "default_alert_template"
      escalation:
        type: object
        properties:
          delay:
            type: integer
            minimum: 0
            description: Escalation delay in seconds
            example: 300
          levels:
            type: array
            items:
              type: string
              maxLength: 255
            description: Escalation levels
            example: ["team@example.com", "manager@example.com"]
        additionalProperties: false
    additionalProperties: false

  # Dashboard Entity
  Dashboard:
    type: object
    required:
      - id
      - name
      - widgets
      - createdBy
      - createdAt
      - updatedAt
    properties:
      id:
        type: string
        format: uuid
        description: Dashboard identifier
        example: "345e6789-e01a-23b4-c567-890123456789"
      name:
        type: string
        minLength: 1
        maxLength: 255
        description: Dashboard name
        example: "Project Management Overview"
      description:
        type: string
        maxLength: 1000
        description: Dashboard description
        example: "Overview of project management service metrics"
      widgets:
        type: array
        items:
          $ref: "#/schemas/DashboardWidget"
        description: Dashboard widgets
      layout:
        type: object
        properties:
          rows:
            type: integer
            minimum: 1
            description: Number of rows
            example: 4
          columns:
            type: integer
            minimum: 1
            description: Number of columns
            example: 6
        additionalProperties: false
      filters:
        type: object
        additionalProperties:
          type: string
          maxLength: 255
        maxProperties: 10
        description: Dashboard filters
        example:
          environment: "production"
          region: "us-east-1"
      timeRange:
        $ref: "#/schemas/TimeRange"
      refreshInterval:
        type: integer
        minimum: 30
        description: Refresh interval in seconds
        example: 300
      visibility:
        type: string
        enum: [private, shared, public]
        description: Dashboard visibility
        example: "shared"
      tags:
        type: array
        items:
          type: string
          minLength: 1
          maxLength: 50
          pattern: "^[a-zA-Z0-9._-]+$"
        maxItems: 20
        uniqueItems: true
        description: Dashboard tags
        example: ["monitoring", "api", "performance"]
      createdBy:
        type: string
        format: uuid
        description: User who created the dashboard
        example: "user-123e4567-e89b-12d3-a456-426614174000"
      createdAt:
        type: string
        format: date-time
        description: Dashboard creation timestamp
        example: "2025-01-18T10:30:00.000Z"
      updatedAt:
        type: string
        format: date-time
        description: Dashboard update timestamp
        example: "2025-01-18T11:45:00.000Z"
    additionalProperties: false

  DashboardWidget:
    type: object
    required:
      - id
      - type
      - title
      - position
      - size
      - configuration
    properties:
      id:
        type: string
        format: uuid
        description: Widget identifier
        example: "widget-123e4567-e89b-12d3-a456-426614174000"
      type:
        type: string
        enum: [line_chart, bar_chart, pie_chart, number, gauge, table, log_viewer, alert_list]
        description: Widget type
        example: "line_chart"
      title:
        type: string
        minLength: 1
        maxLength: 255
        description: Widget title
        example: "API Response Time"
      position:
        type: object
        properties:
          x:
            type: integer
            minimum: 0
            description: X position
            example: 0
          y:
            type: integer
            minimum: 0
            description: Y position
            example: 0
        required: [x, y]
        additionalProperties: false
      size:
        type: object
        properties:
          width:
            type: integer
            minimum: 1
            description: Widget width
            example: 3
          height:
            type: integer
            minimum: 1
            description: Widget height
            example: 2
        required: [width, height]
        additionalProperties: false
      configuration:
        type: object
        properties:
          metrics:
            type: array
            items:
              $ref: "#/schemas/MetricQuery"
            description: Metric queries
          thresholds:
            type: array
            items:
              type: object
              properties:
                value:
                  type: number
                  format: double
                color:
                  type: string
                  pattern: "^#[0-9a-fA-F]{6}$"
                label:
                  type: string
                  maxLength: 50
              required: [value, color]
            description: Threshold lines
          yAxisLabel:
            type: string
            maxLength: 100
            description: Y-axis label
          xAxisLabel:
            type: string
            maxLength: 100
            description: X-axis label
          legend:
            type: object
            properties:
              enabled:
                type: boolean
              position:
                type: string
                enum: [top, bottom, left, right]
            additionalProperties: false
          colors:
            type: array
            items:
              type: string
              pattern: "^#[0-9a-fA-F]{6}$"
            description: Color palette
        additionalProperties: false
    additionalProperties: false

  MetricQuery:
    type: object
    required:
      - metric
      - dimensions
      - statistic
      - period
    properties:
      metric:
        type: string
        maxLength: 255
        description: Metric name
        example: "ResponseTime"
      dimensions:
        type: object
        additionalProperties:
          type: string
          maxLength: 255
        maxProperties: 10
        description: Metric dimensions
        example:
          service: "project-management"
          environment: "production"
      statistic:
        type: string
        enum: [Average, Sum, Maximum, Minimum, SampleCount]
        description: Metric statistic
        example: "Average"
      period:
        type: integer
        minimum: 60
        description: Aggregation period in seconds
        example: 300
      unit:
        $ref: "#/schemas/MetricUnit"
      label:
        type: string
        maxLength: 100
        description: Metric label
        example: "Avg Response Time"
      color:
        type: string
        pattern: "^#[0-9a-fA-F]{6}$"
        description: Line color
        example: "#FF5733"
    additionalProperties: false

  TimeRange:
    type: object
    properties:
      type:
        type: string
        enum: [relative, absolute]
        description: Time range type
        example: "relative"
      relative:
        type: object
        properties:
          amount:
            type: integer
            minimum: 1
            description: Time amount
            example: 1
          unit:
            type: string
            enum: [minutes, hours, days, weeks, months]
            description: Time unit
            example: "hours"
        required: [amount, unit]
        additionalProperties: false
      absolute:
        type: object
        properties:
          start:
            type: string
            format: date-time
            description: Start time
            example: "2025-01-18T09:30:00.000Z"
          end:
            type: string
            format: date-time
            description: End time
            example: "2025-01-18T11:30:00.000Z"
        required: [start, end]
        additionalProperties: false
    additionalProperties: false

# Validation constraints and business rules
validationRules:
  - rule: "Metric names must be unique within namespace"
    constraint: "UNIQUE(metric.name) WHERE metric.namespace = :namespace"
  
  - rule: "Log entries must have valid timestamps"
    constraint: "log.timestamp <= NOW() AND log.timestamp >= NOW() - INTERVAL '30 days'"
  
  - rule: "Traces must have at least one span"
    constraint: "COUNT(spans) >= 1 WHERE spans.traceId = :traceId"
  
  - rule: "Spans must have valid parent-child relationships"
    constraint: "span.parentSpanId EXISTS IN spans OR span.parentSpanId IS NULL"
  
  - rule: "Health checks must have positive durations"
    constraint: "healthCheck.duration >= 0"
  
  - rule: "Alerts must have valid thresholds"
    constraint: "alert.threshold IS NOT NULL AND alert.threshold IS NUMERIC"
  
  - rule: "Dashboard widgets must fit within layout"
    constraint: "widget.position.x + widget.size.width <= dashboard.layout.columns"
  
  - rule: "Metric retention must be within limits"
    constraint: "metric.retention >= 1 AND metric.retention <= 2555"
  
  - rule: "Alert evaluation periods must be positive"
    constraint: "alert.evaluationPeriods >= 1"

# Common patterns and examples
examples:
  # Example metric
  MetricExample:
    name: "api_request_duration"
    namespace: "skafu/project-management"
    value: 125.5
    unit: "Milliseconds"
    dimensions:
      service: "project-management"
      environment: "production"
      method: "GET"
      endpoint: "/projects"
    timestamp: "2025-01-18T10:30:00.000Z"
    source: "lambda-function"
    tags: ["api", "performance", "latency"]

  # Example log entry
  LogEntryExample:
    timestamp: "2025-01-18T10:30:00.000Z"
    level: "INFO"
    message: "Successfully processed request"
    source: "project-management-api"
    requestId: "req-123456789"
    traceId: "trace-abc123def456"
    userId: "user-123e4567-e89b-12d3-a456-426614174000"
    environment: "production"
    service: "project-management"
    context:
      endpoint: "/projects"
      method: "GET"
      statusCode: "200"
      duration: "125ms"

  # Example trace
  TraceExample:
    id: "trace-abc123def456"
    timestamp: "2025-01-18T10:30:00.000Z"
    duration: 245.5
    service: "project-management"
    operation: "POST /projects"
    tags:
      http.method: "POST"
      http.url: "/projects"
      http.status_code: "201"
      user.id: "user-123"

  # Example health check
  HealthCheckExample:
    name: "database_connection"
    status: "healthy"
    timestamp: "2025-01-18T10:30:00.000Z"
    service: "project-management"
    component: "database"
    duration: 15.5
    message: "Database connection is healthy"
    details:
      connectionPool: "8/10 connections active"
      responseTime: "5ms"

  # Example alert
  AlertExample:
    name: "High Error Rate"
    description: "Error rate exceeded 5% threshold"
    severity: "high"
    status: "firing"
    condition:
      metric: "ErrorRate"
      operator: ">"
      threshold: 5.0
      evaluationPeriods: 3
    timestamp: "2025-01-18T10:30:00.000Z"
    source: "cloudwatch"
    service: "project-management"
    currentValue: 7.5

  # Example dashboard widget
  DashboardWidgetExample:
    type: "line_chart"
    title: "API Response Time"
    position:
      x: 0
      y: 0
    size:
      width: 3
      height: 2
    configuration:
      metrics:
        - metric: "ResponseTime"
          dimensions:
            service: "project-management"
            environment: "production"
          statistic: "Average"
          period: 300
          label: "Avg Response Time"
          color: "#FF5733"
      thresholds:
        - value: 500
          color: "#FFA500"
          label: "Warning"
        - value: 1000
          color: "#FF0000"
          label: "Critical"