[MAIN]
# Use multiple processes to speed up Pylint
jobs=0

# Python code to execute, usually for sys.path manipulation such as pygtk.require()
init-hook='import sys; sys.path.append(".")'

# Files or directories to be skipped
ignore=CVS,__pycache__,.git,.pytest_cache,node_modules

# File extensions to analyze
extension-pkg-whitelist=

[MESSAGES CONTROL]
# Disable specific warnings that are not relevant for Lambda environment
disable=
    missing-module-docstring,
    missing-class-docstring,
    missing-function-docstring,
    too-few-public-methods,
    import-error,
    no-name-in-module,
    unused-argument,
    broad-exception-caught,
    global-statement,
    pointless-string-statement,
    duplicate-code

[REPORTS]
# Set the output format
output-format=colorized

# Template used to display messages (includes message IDs by default)
msg-template={path}:{line}:{column}: {msg_id}: {msg} ({symbol})

[FORMAT]
# Maximum number of characters on a single line (following project conventions)
max-line-length=100

# Regexp for a line that is allowed to be longer than the limit
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Number of spaces of indent required inside a hanging or continued line
indent-string='    '

# String used as indentation unit (4 spaces as per PEP 8)
indent-after-paren=4

[VARIABLES]
# List of additional names supposed to be defined in builtins
additional-builtins=

# List of strings which can identify a callback function by name
callbacks=cb_,_cb

[BASIC]
# Naming style matching correct argument names
argument-naming-style=snake_case

# Naming style matching correct attribute names
attr-naming-style=snake_case

# Naming style matching correct class attribute names
class-attribute-naming-style=any

# Naming style matching correct class names
class-naming-style=PascalCase

# Naming style matching correct constant names
const-naming-style=UPPER_CASE

# Naming style matching correct function names
function-naming-style=snake_case

# Naming style matching correct method names
method-naming-style=snake_case

# Naming style matching correct module names
module-naming-style=snake_case

# Naming style matching correct variable names
variable-naming-style=snake_case

# Good variable names which should always be accepted
good-names=i,j,k,ex,Run,_,id,db,ui,ok

# Bad variable names which should always be refused
bad-names=foo,bar,baz,toto,tutu,tata

[DESIGN]
# Maximum number of arguments for function / method
max-args=7

# Maximum number of attributes for a class
max-attributes=10

# Maximum number of boolean expressions in an if statement
max-bool-expr=5

# Maximum number of branch for function / method body
max-branches=15

# Maximum number of locals for function / method body
max-locals=20

# Maximum number of parents for a class
max-parents=7

# Maximum number of public methods for a class
max-public-methods=25

# Maximum number of return / yield for function / method body
max-returns=8

# Maximum number of statements in function / method body
max-statements=60

# Minimum number of public methods for a class
min-public-methods=1

[IMPORTS]
# Allow wildcard imports from modules that define __all__
allow-wildcard-with-all=no

# Analyse import fallback blocks
analyse-fallback-blocks=no

[CLASSES]
# List of method names used to declare (i.e. assign) instance attributes
defining-attr-methods=__init__,__new__,setUp,__post_init__

# List of member names, which should be excluded from the protected access warning
exclude-protected=_asdict,_fields,_replace,_source,_make

# List of valid names for the first argument in a class method
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method
valid-metaclass-classmethod-first-arg=cls

[EXCEPTIONS]
# Exceptions that will emit a warning when being caught
overgeneral-exceptions=builtins.BaseException,builtins.Exception
